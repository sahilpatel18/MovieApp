{"version":3,"sources":["components/common/Pagination.js","utils/paginate.js","services/logService.js","services/httpService.js","services/movieService.js","services/genreService.js","components/common/ListGroup.js","components/common/TableHeader.js","components/common/TableBody.js","components/common/Table.js","components/common/Like.js","services/authService.js","components/MoviesTable.js","components/SearchBox.js","components/Movies.js","components/Customers.js","components/Rentals.js","components/notFound.js","components/Navbar.jsx","components/common/input.js","components/common/select.js","components/common/form.js","components/LoginForm.js","components/MovieForm.js","services/userService.js","components/RegisterForm.js","components/Logout.js","components/common/ProtectedRoute.jsx","components/App.js","index.js"],"names":["Pagination","itemsCount","pageSize","currentPage","onPageChange","pagesCount","Math","ceil","pages","_","range","className","map","page","key","onClick","paginate","items","pageNumber","startIndex","slice","take","value","init","log","error","console","axios","defaults","baseURL","process","interceptors","response","use","status","logService","toast","Promise","reject","get","post","put","delete","setJwt","jwt","headers","common","movieUrl","id","getMovie","movieId","http","saveMovie","movie","_id","body","deleteMovie","getGenres","ListGroup","textProperty","valueProperty","selectedItem","onItemSelect","item","defaultProps","TableHeader","raiseSort","path","sortColumn","props","order","onSort","renderSortIcon","column","this","columns","label","Component","TableBody","renderCell","content","createKey","data","Table","Like","classes","liked","style","cursor","aria-hidden","email","password","a","localStorage","setItem","getJwt","getItem","login","loginWithJwt","logout","removeItem","getCurrentUser","JwtDecode","ex","MoviesTable","to","title","onLike","onDelete","movies","SearchBox","onChange","type","name","placeholder","e","currentTarget","Movies","state","genres","searchQuery","selectedGenre","handleDelete","originalMovies","filter","m","setState","handleLike","index","indexOf","handlePageChange","handleGenreSelect","genre","handleSearch","query","handleSort","getPagedData","allMovies","filtered","toLowerCase","startsWith","orderBy","totalCount","length","user","marginBottom","Customers","Rentals","NotFound","NavBar","data-toggle","data-target","aria-controls","aria-expanded","aria-label","Fragment","Input","rest","htmlFor","Select","options","option","Form","errors","validate","Joi","schema","abortEarly","details","message","validateProperty","obj","handleSubmit","preventDefault","doSubmit","handleChange","input","errorMessage","disabled","LoginForm","username","string","required","auth","location","window","from","pathname","onSubmit","renderInput","renderButton","MovieForm","genreId","numberInStock","dailyRentalRate","number","min","max","history","push","match","params","mapToViewModel","replace","populateGenres","populateMovie","renderSelect","register","RegisterForm","userService","Logout","ProtectedRoute","component","render","App","exact","ReactDOM","document","querySelector"],"mappings":"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","file":"static/js/main.0fc7bc6c.chunk.js","sourcesContent":["import React from \"react\";\nimport _ from \"lodash\";\nimport PropTypes from \"prop-types\";\n\nconst Pagination = ({ itemsCount, pageSize, currentPage, onPageChange }) => {\n  const pagesCount = Math.ceil(itemsCount / pageSize);\n  if (pagesCount === 1) return null;\n  const pages = _.range(1, pagesCount + 1);\n\n  return (\n    <nav>\n      <ul className='pagination'>\n        {pages.map((page) => (\n          <li\n            key={page}\n            className={page === currentPage ? \"page-item active\" : \"page-item\"}\n          >\n            <a className='page-link' onClick={() => onPageChange(page)}>\n              {page}\n            </a>\n          </li>\n        ))}\n      </ul>\n    </nav>\n  );\n};\n\nPagination.propTypes = {\n  itemsCount: PropTypes.number.isRequired,\n  pageSize: PropTypes.number.isRequired,\n  currentPage: PropTypes.number.isRequired,\n  onPageChange: PropTypes.func.isRequired,\n};\n\nexport default Pagination;\n","import _ from \"lodash\";\n\nexport function paginate(items, pageNumber, pageSize) {\n  const startIndex = (pageNumber - 1) * pageSize;\n  return _(items).slice(startIndex).take(pageSize).value();\n}\n","function init() {}\n\nfunction log(error) {\n  console.log(error);\n}\n\nexport default {\n  init,\n  log,\n};\n","import axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport logService from \"./logService\";\n\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\n\naxios.interceptors.response.use(null, (error) => {\n  const expectedError =\n    error.response &&\n    error.response.status >= 400 &&\n    error.response.status < 500;\n\n  if (!expectedError) {\n    logService.log(error);\n    toast.error(\"An unexpected error occurred\");\n  }\n  return Promise.reject(error);\n});\n\nfunction setJwt(jwt) {\n  axios.defaults.headers.common[\"x-auth-token\"] = jwt;\n}\n\nexport default {\n  get: axios.get,\n  post: axios.post,\n  put: axios.put,\n  delete: axios.delete,\n  setJwt,\n};\n","import http from \"./httpService\";\n\n\nconst apiEndpoint = '/movies';\n\nfunction movieUrl(id) {\n  return `${apiEndpoint}/${id}`;\n}\n\nexport function getMovies() {\n  return http.get(apiEndpoint);\n}\n\nexport function getMovie(movieId) {\n  return http.get(movieUrl(movieId));\n}\n\nexport function saveMovie(movie) {\n  if (movie._id) {\n    const body = { ...movie };\n    delete body._id;\n    return http.put(movieUrl(movie._id), body);\n  }\n\n  return http.post(apiEndpoint, movie);\n}\n\nexport function deleteMovie(movieId) {\n  return http.delete(movieUrl(movieId));\n}\n","import http from \"./httpService\";\n\n\nexport function getGenres() {\n  return http.get('/genres');\n}\n","import React from \"react\";\n\nconst ListGroup = ({\n  items,\n  textProperty,\n  valueProperty,\n  selectedItem,\n  onItemSelect,\n}) => {\n  return (\n    <ul className='list-group'>\n      {items.map((item) => (\n        <li\n          onClick={() => onItemSelect(item)}\n          key={item[valueProperty]}\n          className={\n            item === selectedItem ? \"list-group-item active\" : \"list-group-item\"\n          }\n        >\n          {item[textProperty]}\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nListGroup.defaultProps = {\n  textProperty: \"name\",\n  valueProperty: \"_id\",\n};\n\nexport default ListGroup;\n","import React, { Component } from \"react\";\n\nexport default class TableHeader extends Component {\n  raiseSort = (path) => {\n    const sortColumn = { ...this.props.sortColumn };\n    if (sortColumn.path === path)\n      sortColumn.order = sortColumn.order === \"asc\" ? \"desc\" : \"asc\";\n    else {\n      sortColumn.path = path;\n      sortColumn.order = \"asc\";\n    }\n    this.props.onSort(sortColumn);\n  };\n\n  renderSortIcon = (column) => {\n    const { sortColumn } = this.props;\n    if (column.path !== sortColumn.path) return null;\n    if (sortColumn.order === \"asc\") return <i className='fa fa-sort-asc'></i>;\n    return <i className='fa fa-sort-asc'></i>\n  };\n\n  render() {\n    return (\n      <thead>\n        <tr>\n          {this.props.columns.map((column) => (\n            <th\n            className='clickable'\n              key={column.path || column.key}\n              onClick={() => this.raiseSort(column.path)}\n            >\n              {column.label} {this.renderSortIcon(column)}\n            </th>\n          ))}\n        </tr>\n      </thead>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport _ from \"lodash\";\n\nexport default class TableBody extends Component {\n  renderCell = (item, column) => {\n    if (column.content) return column.content(item);\n\n    return _.get(item, column.path);\n  };\n\n  createKey = (item, column) => {\n    return item._id + (column.path || column.key);\n  };\n\n  render() {\n    const { data, columns } = this.props;\n\n    return (\n      <tbody>\n        {data.map((item) => (\n          <tr key={item._id}>\n            {columns.map((column) => (\n              <td key={this.createKey(item, column)}>\n                {this.renderCell(item, column)}\n              </td>\n            ))}\n          </tr>\n        ))}\n      </tbody>\n    );\n  }\n}\n","import React from \"react\";\nimport TableHeader from \"./TableHeader\";\nimport TableBody from \"./TableBody\";\n\nconst Table = ({ columns, sortColumn, onSort, data }) => {\n  return (\n    <table className='table'>\n      <TableHeader columns={columns} sortColumn={sortColumn} onSort={onSort} />\n      <TableBody columns={columns} data={data} />\n    </table>\n  );\n};\n\nexport default Table;\n ","import React from \"react\";\n\nconst Like = (props) => {\n  let classes = \"fa fa-heart\";\n  if (!props.liked) classes += \"-o\";\n  return (\n    <i\n      onClick={props.onClick}\n      className={classes}\n      style={{ cursor: \"pointer\" }}\n      aria-hidden='true'\n    ></i>\n  );\n};\n\nexport default Like;\n","import http from \"./httpService\";\n\nimport JwtDecode from \"jwt-decode\";\n\nconst apiEndpoint = '/auth'\nconst tokenKey = \"token\";\n\nhttp.setJwt(getJwt());\n\nexport async function login(email, password) {\n  const { data: jwt } = await http.post(apiEndpoint, { email, password });\n  localStorage.setItem(tokenKey, jwt);\n}\n\nexport function loginWithJwt(jwt) {\n  localStorage.setItem(tokenKey, jwt);\n}\n\nexport function logout() {\n  localStorage.removeItem(tokenKey);\n}\n\nexport function getCurrentUser() {\n  try {\n    const jwt = localStorage.getItem(tokenKey);\n    return JwtDecode(jwt);\n  } catch (ex) {\n    return null;\n  }\n}\n\nexport function getJwt() {\n  return localStorage.getItem(tokenKey);\n}\n\nexport default {\n  login,\n  loginWithJwt,\n  logout,\n  getCurrentUser,\n  getJwt,\n};\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Table from \"./common/Table\";\nimport Like from \"./common/Like\";\nimport auth from \"../services/authService\";\n\nclass MoviesTable extends Component {\n  columns = [\n    {\n      path: \"title\",\n      label: \"Title\",\n      content: (movie) => (\n        <Link to={`/movies/${movie._id}`}>{movie.title}</Link>\n      ),\n    },\n    { path: \"genre.name\", label: \"Genre\" },\n    { path: \"numberInStock\", label: \"Stock\" },\n    { path: \"dailyRentalRate\", label: \"Rate\" },\n    {\n      key: \"like\",\n      content: (movie) => (\n        <Like liked={movie.liked} onClick={() => this.props.onLike(movie)} />\n      ),\n    },\n    {\n      key: \"delete\",\n      content: (movie) => (\n        <button\n          onClick={() => this.props.onDelete(movie)}\n          className='btn btn-danger btn-sm'\n        >\n          Delete\n        </button>\n      ),\n    },\n  ];\n\n  render() {\n    const { movies, onSort, sortColumn } = this.props;\n\n    return (\n      <Table\n        columns={this.columns}\n        data={movies}\n        sortColumn={sortColumn}\n        onSort={onSort}\n      />\n    );\n  }\n}\n\nexport default MoviesTable;\n","import React from \"react\";\n\nconst SearchBox = ({ value, onChange }) => {\n  return (\n    <input\n      type=\"text\"\n      name=\"query\"\n      className=\"form-control my-3\"\n      placeholder=\"Search...\"\n      value={value}\n      onChange={e => onChange(e.currentTarget.value)}\n    />\n  );\n};\n\nexport default SearchBox;\n","import React, { Component } from \"react\";\nimport Pagination from \"./common/Pagination\";\nimport { toast } from \"react-toastify\";\nimport { paginate } from \"../utils/paginate\";\nimport { getMovies, deleteMovie } from \"../services/movieService\";\nimport { getGenres } from \"../services/genreService\";\nimport ListGroup from \"./common/ListGroup\";\nimport MoviesTable from \"./MoviesTable\";\nimport _ from \"lodash\";\nimport { Link } from \"react-router-dom\";\nimport SearchBox from \"./SearchBox\";\n\nclass Movies extends Component {\n  state = {\n    movies: [],\n    genres: [],\n    currentPage: 1,\n    pageSize: 4,\n    searchQuery: \"\",\n    selectedGenre: null,\n    sortColumn: { path: \"title\", order: \"asc\" },\n  };\n\n  async componentDidMount() {\n    const { data } = await getGenres();\n    const genres = [{ _id: \"\", name: \"All Genres\" }, ...data];\n    const { data: movies } = await getMovies();\n    this.setState({ movies, genres });\n  }\n\n  handleDelete = async (movie) => {\n    const originalMovies = this.state.movies;\n    const movies = originalMovies.filter((m) => m._id !== movie._id);\n    this.setState({ movies });\n\n    try {\n      await deleteMovie(movie._id);\n    } catch (ex) {\n      if (ex.response && ex.response.status === 404)\n        toast.error(\"This Movie has already been deleted\");\n\n      this.setState({ movies: originalMovies });\n    }\n  };\n\n  handleLike = (movie) => {\n    const movies = [...this.state.movies];\n    const index = movies.indexOf(movie);\n    movies[index] = { ...movies[index] };\n    movies[index].liked = !movies[index].liked;\n    this.setState({ movies });\n  };\n\n  handlePageChange = (page) => {\n    this.setState({ currentPage: page });\n  };\n\n  handleGenreSelect = (genre) => {\n    this.setState({ selectedGenre: genre, searchQuery: \"\", currentPage: 1 });\n  };\n\n  handleSearch = (query) => {\n    this.setState({ searchQuery: query, selectedGenre: null, currentPage: 1 });\n  };\n\n  handleSort = (sortColumn) => {\n    this.setState({ sortColumn });\n  };\n\n  getPagedData = () => {\n    const {\n      pageSize,\n      currentPage,\n      sortColumn,\n      selectedGenre,\n      searchQuery,\n      movies: allMovies,\n    } = this.state;\n\n    let filtered = allMovies;\n    if (searchQuery)\n      filtered = allMovies.filter((m) =>\n        m.title.toLowerCase().startsWith(searchQuery.toLowerCase())\n      );\n    else if (selectedGenre && selectedGenre._id)\n      filtered = allMovies.filter((m) => m.genre._id === selectedGenre._id);\n\n    const sorted = _.orderBy(filtered, [sortColumn.path], [sortColumn.order]);\n\n    const movies = paginate(sorted, currentPage, pageSize);\n\n    return { totalCount: filtered.length, data: movies };\n  };\n\n  render() {\n    const { pageSize, currentPage, sortColumn, searchQuery } = this.state;\n    const { user } = this.props;\n\n    const { totalCount, data: movies } = this.getPagedData();\n\n    return (\n      <div className='row'>\n        <div className='col-3'>\n          <ListGroup\n            items={this.state.genres}\n            selectedItem={this.state.selectedGenre}\n            onItemSelect={this.handleGenreSelect}\n          />\n        </div>\n        <div className='col'>\n          {user && (\n            <Link\n              to='/movies/new'\n              className='btn btn-primary'\n              style={{ marginBottom: 20 }}\n            >\n              New Movie\n            </Link>\n          )}\n          <p>Showing {totalCount} movies in the database.</p>\n          <SearchBox value={searchQuery} onChange={this.handleSearch} />\n          <MoviesTable\n            movies={movies}\n            sortColumn={sortColumn}\n            onLike={this.handleLike}\n            onDelete={this.handleDelete}\n            onSort={this.handleSort}\n          />\n          <Pagination\n            itemsCount={totalCount}\n            pageSize={pageSize}\n            currentPage={currentPage}\n            onPageChange={this.handlePageChange}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Movies;\n","import React from 'react'\n\n const Customers = () => {\n    return (\n        <h1>Customers</h1>\n    )\n}\n\nexport default Customers","import React from \"react\";\n\nconst Rentals = () => {\n  return <h1>Rentals</h1>;\n};\n\nexport default Rentals;\n","import React from 'react'\n\n const NotFound = () => {\n    return (\n        <h1>Not Found</h1>\n    )\n}\n\nexport default NotFound","import React from \"react\";\nimport { Link, NavLink } from \"react-router-dom\";\n\nconst NavBar = ({ user }) => {\n  return (\n    <nav className='navbar navbar-expand-lg navbar-light bg-light'>\n      <Link className='navbar-brand' to='/'>\n        Vidly\n      </Link>\n      <button\n        className='navbar-toggler'\n        type='button'\n        data-toggle='collapse'\n        data-target='#navbarNav'\n        aria-controls='navbarNav'\n        aria-expanded='false'\n        aria-label='Toggle navigation'\n      >\n        <span className='navbar-toggler-icon'></span>\n      </button>\n      <div className='collapse navbar-collapse' id='navbarNav'>\n        <ul className='navbar-nav'>\n          <li className='nav-item active'>\n            <NavLink className='nav-link' to='/movies'>\n              Movies\n            </NavLink>\n          </li>\n          {!user && (\n            <React.Fragment>\n              <li className='nav-item'>\n                <NavLink className='nav-link' to='/login'>\n                  Login\n                </NavLink>\n              </li>\n              <li className='nav-item'>\n                <NavLink className='nav-link' to='/register'>\n                  Register\n                </NavLink>\n              </li>\n            </React.Fragment>\n          )}\n          {user && (\n            <React.Fragment>\n              <li className='nav-item'>\n                <NavLink className='nav-link disabled' to='/profile'>\n                  {user.name}\n                </NavLink>\n              </li>\n              <li className='nav-item'>\n                <NavLink className='nav-link' to='/logout'>\n                  Logout\n                </NavLink>\n              </li>\n            </React.Fragment>\n          )}\n        </ul>\n      </div>\n    </nav>\n  );\n};\n\nexport default NavBar;\n","import React from \"react\";\n\nconst Input = ({ name, label, error, ...rest }) => {\n  return (\n    <div className='form-group'>\n      <label htmlFor={name}>{label}</label>\n      <input {...rest} name={name} id={name} className='form-control' />\n      {error && <div className='alert alert-danger'>{error}</div>}\n    </div>\n  );\n};\n\nexport default Input;\n","import React from \"react\";\n\nconst Select = ({ name, label, options, error, ...rest }) => {\n  return (\n    <div className='form-group'>\n      <label htmlFor={name}>{label}</label>\n      <select name={name} id={name} {...rest} className='form-control'>\n        <option value='' />\n        {options.map((option) => (\n          <option key={option._id} value={option._id}>\n            {option.name}\n          </option>\n        ))}\n      </select>\n      {error && <div className='alert alert-danger'>{error}</div>}\n    </div>\n  );\n};\n\nexport default Select;\n","import React, { Component } from \"react\";\nimport Joi from \"joi-browser\";\nimport Input from './input'\nimport Select from \"./select\";\n\nexport default class Form extends Component {\n  state = {\n    data: {},\n    errors: {},\n  };\n\n  validate = () => {\n    const options = { abortEarly: false };\n    const { error } = Joi.validate(this.state.data, this.schema, options);\n    if (!error) return null;\n\n    const errors = {};\n    for (let item of error.details) errors[item.path[0]] = item.message;\n    return errors;\n  };\n\n  validateProperty = ({ name, value }) => {\n    const obj = { [name]: value };\n    const schema = { [name]: this.schema[name] };\n    const { error } = Joi.validate(obj, schema);\n    return error ? error.details[0].message : null;\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    const errors = this.validate();\n    this.setState({ errors: errors || {} });\n    if (errors) return;\n\n    this.doSubmit();\n  };\n\n  handleChange = ({ currentTarget: input }) => {\n    const errors = { ...this.state.errors };\n    const errorMessage = this.validateProperty(input);\n    if (errorMessage) errors[input.name] = errorMessage;\n    else delete errors[input.name];\n\n    const data = { ...this.state.data };\n    data[input.name] = input.value;\n\n    this.setState({ data, errors });\n  };\n\n  renderButton(label) {\n    return (\n      <button disabled={this.validate()} className=\"btn btn-primary\">\n        {label}\n      </button>\n    );\n  }\n\n  renderSelect(name, label, options) {\n    const { data, errors } = this.state;\n\n    return (\n      <Select\n        name={name}\n        value={data[name]}\n        label={label}\n        options={options}\n        onChange={this.handleChange}\n        error={errors[name]}\n      />\n    );\n  }\n\n  renderInput(name, label, type = \"text\") {\n    const { data, errors } = this.state;\n\n    return (\n      <Input\n        type={type}\n        name={name}\n        value={data[name]}\n        label={label}\n        onChange={this.handleChange}\n        error={errors[name]}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport Form from \"./common/form\";\nimport Joi from \"joi-browser\";\nimport auth from \"../services/authService\";\nimport { Redirect } from \"react-router-dom\";\n\nexport default class LoginForm extends Form {\n  state = {\n    data: { username: \"\", password: \"\" },\n    errors: {},\n  };\n\n  schema = {\n    username: Joi.string().required().label(\"Username\"),\n    password: Joi.string().required().label(\"Password\"),\n  };\n\n  doSubmit = async () => {\n    try {\n      const { data } = this.state;\n      await auth.login(data.username, data.password);\n\n      const { state } = this.props.location;\n      window.location = state ? state.from.pathname : \"/\";\n    } catch (ex) {\n      if (ex.response && ex.response.status === 400) {\n        const errors = { ...this.state.errors };\n        errors.username = ex.response.data;\n        this.setState({ errors });\n      }\n    }\n  };\n\n  render() {\n    if (auth.getCurrentUser()) return <Redirect to='/' />;\n\n    return (\n      <div>\n        <h1>Login</h1>\n        <form onSubmit={this.handleSubmit}>\n          {this.renderInput(\"username\", \"Username\")}\n          {this.renderInput(\"password\", \"Password\", \"password\")}\n          {this.renderButton(\"Login\")}\n        </form>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport Joi from \"joi-browser\";\nimport Form from \"./common/form\";\nimport { getMovie, saveMovie } from \"../services/movieService\";\nimport { getGenres } from \"../services/genreService\";\n\nexport default class MovieForm extends Form {\n  state = {\n    data: {\n      title: \"\",\n      genreId: \"\",\n      numberInStock: \"\",\n      dailyRentalRate: \"\",\n    },\n    genres: [],\n    errors: {},\n  };\n  schema = {\n    _id: Joi.string(),\n    title: Joi.string().required().label(\"Title\"),\n    genreId: Joi.string().required().label(\"Genre\"),\n    numberInStock: Joi.number()\n      .required()\n      .min(0)\n      .max(100)\n      .label(\"Number in Stock\"),\n    dailyRentalRate: Joi.number()\n      .required()\n      .min(0)\n      .max(10)\n      .label(\"Daily Rental Rate\"),\n  };\n\n  async populateGenres() {\n    const { data: genres } = await getGenres();\n    this.setState({ genres });\n  }\n\n  async populateMovie() {\n    try {\n      const movieId = this.props.match.params.id;\n      if (movieId === \"new\") return;\n      const { data: movie } = await getMovie(movieId);\n      this.setState({ data: this.mapToViewModel(movie) });\n    } catch (ex) {\n      if (ex.response && ex.response.status === 404)\n        this.props.history.replace(\"/not-found\");\n    }\n  }\n\n  async componentDidMount() {\n    await this.populateGenres();\n    await this.populateMovie();\n  }\n\n  mapToViewModel(movie) {\n    return {\n      _id: movie._id,\n      title: movie.title,\n      genreId: movie.genre._id,\n      numberInStock: movie.numberInStock,\n      dailyRentalRate: movie.dailyRentalRate,\n    };\n  }\n\n  doSubmit = async () => {\n    await saveMovie(this.state.data);\n\n    this.props.history.push(\"/movies\");\n  };\n\n  render() {\n    return (\n      <div>\n        <h1>Movie Form</h1>\n        <form onSubmit={this.handleSubmit}>\n          {this.renderInput(\"title\", \"Title\")}\n          {this.renderSelect(\"genreId\", \"Genre\", this.state.genres)}\n          {this.renderInput(\"numberInStock\", \"Number in Stock\", \"number\")}\n          {this.renderInput(\"dailyRentalRate\", \"Rate\")}\n          {this.renderButton(\"Save\")}\n        </form>\n      </div>\n    );\n  }\n}\n","import http from \"./httpService\";\n\nconst apiEndpoint = '/users'\n\nexport function register(user) {\n  return http.post(apiEndpoint, {\n    email: user.username,\n    password: user.password,\n    name: user.name,\n  });\n}\n","import React from \"react\";\nimport Form from \"./common/form\";\nimport Joi from \"joi-browser\";\nimport * as userService from \"../services/userService\";\nimport auth from '../services/authService'\n\nexport default class RegisterForm extends Form {\n  state = {\n    data: {\n      username: \"\",\n      password: \"\",\n      name: \"\",\n    },\n    errors: {},\n  };\n\n  schema = {\n    username: Joi.string().required().email().label(\"Username\"),\n    password: Joi.string().required().min(5).label(\"Password\"),\n    name: Joi.string().required().label(\"Name\"),\n  };\n\n  doSubmit = async () => {\n    try {\n      const response = await userService.register(this.state.data);\n      auth.loginWithJwt(response.headers[\"x-auth-token\"]);\n     window.location = '/'\n    } catch (ex) {\n      if (ex.response && ex.response.status === 400) {\n        const errors = { ...this.state.errors };\n        errors.username = ex.response.data;\n        this.setState({ errors });\n      }\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <h1>Register</h1>\n        <form onSubmit={this.handleSubmit}>\n          {this.renderInput(\"username\", \"Username\")}\n          {this.renderInput(\"password\", \"Password\", \"password\")}\n          {this.renderInput(\"name\", \"Name\")}\n          {this.renderButton(\"Register\")}\n        </form>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport auth from '../services/authService'\n\nexport default class Logout extends Component {\n  componentDidMount() {\n      auth.logout()\n\n    window.location = \"/\";\n  }\n\n  render() {\n    return null;\n  }\n}\n","import React from \"react\";\nimport auth from \"../../services/authService\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nconst ProtectedRoute = ({ path, component: Component, render, ...rest }) => {\n  return (\n    <Route\n      {...rest}\n      render={(props) => {\n        if (!auth.getCurrentUser()) return <Redirect to={{ \n            pathname: '/login',\n            state: { from: props.location}\n         }} />;\n        return Component ? <Component {...props} /> : render(props);\n      }}\n    />\n  );\n};\n\nexport default ProtectedRoute;\n","import React, { Component } from \"react\";\nimport { Route, Redirect, Switch } from \"react-router-dom\";\nimport { ToastContainer } from \"react-toastify\";\nimport Movies from \"./Movies\";\nimport Customers from \"./Customers\";\nimport Rentals from \"./Rentals\";\nimport NotFound from \"./notFound\";\nimport NavBar from \"./Navbar\";\nimport LoginForm from \"./LoginForm\";\nimport MovieForm from \"./MovieForm\";\nimport RegisterForm from \"./RegisterForm\";\nimport auth from \"../services/authService\";\nimport Logout from \"./Logout\";\nimport ProtectedRoute from \"./common/ProtectedRoute\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nclass App extends Component {\n  state = {};\n\n  componentDidMount() {\n    const user = auth.getCurrentUser();\n    this.setState({ user });\n  }\n\n  render() {\n    const { user } = this.state;\n    return (\n      <>\n        <ToastContainer />\n        <NavBar user={user} />\n        <main className='container'>\n          <Switch>\n            <Route path='/register' component={RegisterForm} />\n            <Route path='/login' component={LoginForm} />\n            <Route path='/logout' component={Logout} />\n            <ProtectedRoute path='/movies/:id' component={MovieForm} />\n            <Route\n              path='/movies'\n              render={(props) => <Movies {...props} user={this.state.user} />}\n            />\n            <Route path='/customers' component={Customers} />\n            <Route path='/rentals' component={Rentals} />\n            <Route path='/not-found' component={NotFound} />\n            <Redirect from='/' exact to='/movies' />\n            <Redirect to='/not-found' />\n          </Switch>\n        </main>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"font-awesome/css/font-awesome.css\";\nimport \"./index.css\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n\n  document.querySelector(\"#root\")\n);\n"],"sourceRoot":""}